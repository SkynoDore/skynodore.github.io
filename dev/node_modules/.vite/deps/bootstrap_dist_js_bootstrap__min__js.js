// node_modules/bootstrap/dist/js/bootstrap.min.js
if ("undefined" == typeof jQuery) throw new Error("Bootstrap's JavaScript requires jQuery");
!function(t) {
  "use strict";
  var e = jQuery.fn.jquery.split(" ")[0].split(".");
  if (e[0] < 2 && e[1] < 9 || 1 == e[0] && 9 == e[1] && e[2] < 1 || 3 < e[0]) throw new Error("Bootstrap's JavaScript requires jQuery version 1.9.1 or higher, but lower than version 4");
}(), function(n) {
  "use strict";
  n.fn.emulateTransitionEnd = function(t) {
    var e = false, i = this;
    n(this).one("bsTransitionEnd", function() {
      e = true;
    });
    return setTimeout(function() {
      e || n(i).trigger(n.support.transition.end);
    }, t), this;
  }, n(function() {
    n.support.transition = function o() {
      var t = document.createElement("bootstrap"), e = { WebkitTransition: "webkitTransitionEnd", MozTransition: "transitionend", OTransition: "oTransitionEnd otransitionend", transition: "transitionend" };
      for (var i in e) if (t.style[i] !== void 0) return { end: e[i] };
      return false;
    }(), n.support.transition && (n.event.special.bsTransitionEnd = { bindType: n.support.transition.end, delegateType: n.support.transition.end, handle: function(t) {
      if (n(t.target).is(this)) return t.handleObj.handler.apply(this, arguments);
    } });
  });
}(jQuery), function(s) {
  "use strict";
  var e = '[data-dismiss="alert"]', a = function(t2) {
    s(t2).on("click", e, this.close);
  };
  a.VERSION = "3.4.1", a.TRANSITION_DURATION = 150, a.prototype.close = function(t2) {
    var e2 = s(this), i = e2.attr("data-target");
    i || (i = (i = e2.attr("href")) && i.replace(/.*(?=#[^\s]*$)/, "")), i = "#" === i ? [] : i;
    var o = s(document).find(i);
    function n() {
      o.detach().trigger("closed.bs.alert").remove();
    }
    t2 && t2.preventDefault(), o.length || (o = e2.closest(".alert")), o.trigger(t2 = s.Event("close.bs.alert")), t2.isDefaultPrevented() || (o.removeClass("in"), s.support.transition && o.hasClass("fade") ? o.one("bsTransitionEnd", n).emulateTransitionEnd(a.TRANSITION_DURATION) : n());
  };
  var t = s.fn.alert;
  s.fn.alert = function o(i) {
    return this.each(function() {
      var t2 = s(this), e2 = t2.data("bs.alert");
      e2 || t2.data("bs.alert", e2 = new a(this)), "string" == typeof i && e2[i].call(t2);
    });
  }, s.fn.alert.Constructor = a, s.fn.alert.noConflict = function() {
    return s.fn.alert = t, this;
  }, s(document).on("click.bs.alert.data-api", e, a.prototype.close);
}(jQuery), function(s) {
  "use strict";
  var n = function(t2, e) {
    this.$element = s(t2), this.options = s.extend({}, n.DEFAULTS, e), this.isLoading = false;
  };
  function i(o) {
    return this.each(function() {
      var t2 = s(this), e = t2.data("bs.button"), i2 = "object" == typeof o && o;
      e || t2.data("bs.button", e = new n(this, i2)), "toggle" == o ? e.toggle() : o && e.setState(o);
    });
  }
  n.VERSION = "3.4.1", n.DEFAULTS = { loadingText: "loading..." }, n.prototype.setState = function(t2) {
    var e = "disabled", i2 = this.$element, o = i2.is("input") ? "val" : "html", n2 = i2.data();
    t2 += "Text", null == n2.resetText && i2.data("resetText", i2[o]()), setTimeout(s.proxy(function() {
      i2[o](null == n2[t2] ? this.options[t2] : n2[t2]), "loadingText" == t2 ? (this.isLoading = true, i2.addClass(e).attr(e, e).prop(e, true)) : this.isLoading && (this.isLoading = false, i2.removeClass(e).removeAttr(e).prop(e, false));
    }, this), 0);
  }, n.prototype.toggle = function() {
    var t2 = true, e = this.$element.closest('[data-toggle="buttons"]');
    if (e.length) {
      var i2 = this.$element.find("input");
      "radio" == i2.prop("type") ? (i2.prop("checked") && (t2 = false), e.find(".active").removeClass("active"), this.$element.addClass("active")) : "checkbox" == i2.prop("type") && (i2.prop("checked") !== this.$element.hasClass("active") && (t2 = false), this.$element.toggleClass("active")), i2.prop("checked", this.$element.hasClass("active")), t2 && i2.trigger("change");
    } else this.$element.attr("aria-pressed", !this.$element.hasClass("active")), this.$element.toggleClass("active");
  };
  var t = s.fn.button;
  s.fn.button = i, s.fn.button.Constructor = n, s.fn.button.noConflict = function() {
    return s.fn.button = t, this;
  }, s(document).on("click.bs.button.data-api", '[data-toggle^="button"]', function(t2) {
    var e = s(t2.target).closest(".btn");
    i.call(e, "toggle"), s(t2.target).is('input[type="radio"], input[type="checkbox"]') || (t2.preventDefault(), e.is("input,button") ? e.trigger("focus") : e.find("input:visible,button:visible").first().trigger("focus"));
  }).on("focus.bs.button.data-api blur.bs.button.data-api", '[data-toggle^="button"]', function(t2) {
    s(t2.target).closest(".btn").toggleClass("focus", /^focus(in)?$/.test(t2.type));
  });
}(jQuery), function(p) {
  "use strict";
  var c = function(t2, e2) {
    this.$element = p(t2), this.$indicators = this.$element.find(".carousel-indicators"), this.options = e2, this.paused = null, this.sliding = null, this.interval = null, this.$active = null, this.$items = null, this.options.keyboard && this.$element.on("keydown.bs.carousel", p.proxy(this.keydown, this)), "hover" == this.options.pause && !("ontouchstart" in document.documentElement) && this.$element.on("mouseenter.bs.carousel", p.proxy(this.pause, this)).on("mouseleave.bs.carousel", p.proxy(this.cycle, this));
  };
  function r(n) {
    return this.each(function() {
      var t2 = p(this), e2 = t2.data("bs.carousel"), i = p.extend({}, c.DEFAULTS, t2.data(), "object" == typeof n && n), o = "string" == typeof n ? n : i.slide;
      e2 || t2.data("bs.carousel", e2 = new c(this, i)), "number" == typeof n ? e2.to(n) : o ? e2[o]() : i.interval && e2.pause().cycle();
    });
  }
  c.VERSION = "3.4.1", c.TRANSITION_DURATION = 600, c.DEFAULTS = { interval: 5e3, pause: "hover", wrap: true, keyboard: true }, c.prototype.keydown = function(t2) {
    if (!/input|textarea/i.test(t2.target.tagName)) {
      switch (t2.which) {
        case 37:
          this.prev();
          break;
        case 39:
          this.next();
          break;
        default:
          return;
      }
      t2.preventDefault();
    }
  }, c.prototype.cycle = function(t2) {
    return t2 || (this.paused = false), this.interval && clearInterval(this.interval), this.options.interval && !this.paused && (this.interval = setInterval(p.proxy(this.next, this), this.options.interval)), this;
  }, c.prototype.getItemIndex = function(t2) {
    return this.$items = t2.parent().children(".item"), this.$items.index(t2 || this.$active);
  }, c.prototype.getItemForDirection = function(t2, e2) {
    var i = this.getItemIndex(e2);
    if (("prev" == t2 && 0 === i || "next" == t2 && i == this.$items.length - 1) && !this.options.wrap) return e2;
    var o = (i + ("prev" == t2 ? -1 : 1)) % this.$items.length;
    return this.$items.eq(o);
  }, c.prototype.to = function(t2) {
    var e2 = this, i = this.getItemIndex(this.$active = this.$element.find(".item.active"));
    if (!(t2 > this.$items.length - 1 || t2 < 0)) return this.sliding ? this.$element.one("slid.bs.carousel", function() {
      e2.to(t2);
    }) : i == t2 ? this.pause().cycle() : this.slide(i < t2 ? "next" : "prev", this.$items.eq(t2));
  }, c.prototype.pause = function(t2) {
    return t2 || (this.paused = true), this.$element.find(".next, .prev").length && p.support.transition && (this.$element.trigger(p.support.transition.end), this.cycle(true)), this.interval = clearInterval(this.interval), this;
  }, c.prototype.next = function() {
    if (!this.sliding) return this.slide("next");
  }, c.prototype.prev = function() {
    if (!this.sliding) return this.slide("prev");
  }, c.prototype.slide = function(t2, e2) {
    var i = this.$element.find(".item.active"), o = e2 || this.getItemForDirection(t2, i), n = this.interval, s = "next" == t2 ? "left" : "right", a = this;
    if (o.hasClass("active")) return this.sliding = false;
    var r2 = o[0], l = p.Event("slide.bs.carousel", { relatedTarget: r2, direction: s });
    if (this.$element.trigger(l), !l.isDefaultPrevented()) {
      if (this.sliding = true, n && this.pause(), this.$indicators.length) {
        this.$indicators.find(".active").removeClass("active");
        var h = p(this.$indicators.children()[this.getItemIndex(o)]);
        h && h.addClass("active");
      }
      var d = p.Event("slid.bs.carousel", { relatedTarget: r2, direction: s });
      return p.support.transition && this.$element.hasClass("slide") ? (o.addClass(t2), "object" == typeof o && o.length && o[0].offsetWidth, i.addClass(s), o.addClass(s), i.one("bsTransitionEnd", function() {
        o.removeClass([t2, s].join(" ")).addClass("active"), i.removeClass(["active", s].join(" ")), a.sliding = false, setTimeout(function() {
          a.$element.trigger(d);
        }, 0);
      }).emulateTransitionEnd(c.TRANSITION_DURATION)) : (i.removeClass("active"), o.addClass("active"), this.sliding = false, this.$element.trigger(d)), n && this.cycle(), this;
    }
  };
  var t = p.fn.carousel;
  p.fn.carousel = r, p.fn.carousel.Constructor = c, p.fn.carousel.noConflict = function() {
    return p.fn.carousel = t, this;
  };
  var e = function(t2) {
    var e2 = p(this), i = e2.attr("href");
    i && (i = i.replace(/.*(?=#[^\s]+$)/, ""));
    var o = e2.attr("data-target") || i, n = p(document).find(o);
    if (n.hasClass("carousel")) {
      var s = p.extend({}, n.data(), e2.data()), a = e2.attr("data-slide-to");
      a && (s.interval = false), r.call(n, s), a && n.data("bs.carousel").to(a), t2.preventDefault();
    }
  };
  p(document).on("click.bs.carousel.data-api", "[data-slide]", e).on("click.bs.carousel.data-api", "[data-slide-to]", e), p(window).on("load", function() {
    p('[data-ride="carousel"]').each(function() {
      var t2 = p(this);
      r.call(t2, t2.data());
    });
  });
}(jQuery), function(a) {
  "use strict";
  var r = function(t2, e) {
    this.$element = a(t2), this.options = a.extend({}, r.DEFAULTS, e), this.$trigger = a('[data-toggle="collapse"][href="#' + t2.id + '"],[data-toggle="collapse"][data-target="#' + t2.id + '"]'), this.transitioning = null, this.options.parent ? this.$parent = this.getParent() : this.addAriaAndCollapsedClass(this.$element, this.$trigger), this.options.toggle && this.toggle();
  };
  function n(t2) {
    var e, i = t2.attr("data-target") || (e = t2.attr("href")) && e.replace(/.*(?=#[^\s]+$)/, "");
    return a(document).find(i);
  }
  function l(o) {
    return this.each(function() {
      var t2 = a(this), e = t2.data("bs.collapse"), i = a.extend({}, r.DEFAULTS, t2.data(), "object" == typeof o && o);
      !e && i.toggle && /show|hide/.test(o) && (i.toggle = false), e || t2.data("bs.collapse", e = new r(this, i)), "string" == typeof o && e[o]();
    });
  }
  r.VERSION = "3.4.1", r.TRANSITION_DURATION = 350, r.DEFAULTS = { toggle: true }, r.prototype.dimension = function() {
    return this.$element.hasClass("width") ? "width" : "height";
  }, r.prototype.show = function() {
    if (!this.transitioning && !this.$element.hasClass("in")) {
      var t2, e = this.$parent && this.$parent.children(".panel").children(".in, .collapsing");
      if (!(e && e.length && (t2 = e.data("bs.collapse")) && t2.transitioning)) {
        var i = a.Event("show.bs.collapse");
        if (this.$element.trigger(i), !i.isDefaultPrevented()) {
          e && e.length && (l.call(e, "hide"), t2 || e.data("bs.collapse", null));
          var o = this.dimension();
          this.$element.removeClass("collapse").addClass("collapsing")[o](0).attr("aria-expanded", true), this.$trigger.removeClass("collapsed").attr("aria-expanded", true), this.transitioning = 1;
          var n2 = function() {
            this.$element.removeClass("collapsing").addClass("collapse in")[o](""), this.transitioning = 0, this.$element.trigger("shown.bs.collapse");
          };
          if (!a.support.transition) return n2.call(this);
          var s = a.camelCase(["scroll", o].join("-"));
          this.$element.one("bsTransitionEnd", a.proxy(n2, this)).emulateTransitionEnd(r.TRANSITION_DURATION)[o](this.$element[0][s]);
        }
      }
    }
  }, r.prototype.hide = function() {
    if (!this.transitioning && this.$element.hasClass("in")) {
      var t2 = a.Event("hide.bs.collapse");
      if (this.$element.trigger(t2), !t2.isDefaultPrevented()) {
        var e = this.dimension();
        this.$element[e](this.$element[e]())[0].offsetHeight, this.$element.addClass("collapsing").removeClass("collapse in").attr("aria-expanded", false), this.$trigger.addClass("collapsed").attr("aria-expanded", false), this.transitioning = 1;
        var i = function() {
          this.transitioning = 0, this.$element.removeClass("collapsing").addClass("collapse").trigger("hidden.bs.collapse");
        };
        if (!a.support.transition) return i.call(this);
        this.$element[e](0).one("bsTransitionEnd", a.proxy(i, this)).emulateTransitionEnd(r.TRANSITION_DURATION);
      }
    }
  }, r.prototype.toggle = function() {
    this[this.$element.hasClass("in") ? "hide" : "show"]();
  }, r.prototype.getParent = function() {
    return a(document).find(this.options.parent).find('[data-toggle="collapse"][data-parent="' + this.options.parent + '"]').each(a.proxy(function(t2, e) {
      var i = a(e);
      this.addAriaAndCollapsedClass(n(i), i);
    }, this)).end();
  }, r.prototype.addAriaAndCollapsedClass = function(t2, e) {
    var i = t2.hasClass("in");
    t2.attr("aria-expanded", i), e.toggleClass("collapsed", !i).attr("aria-expanded", i);
  };
  var t = a.fn.collapse;
  a.fn.collapse = l, a.fn.collapse.Constructor = r, a.fn.collapse.noConflict = function() {
    return a.fn.collapse = t, this;
  }, a(document).on("click.bs.collapse.data-api", '[data-toggle="collapse"]', function(t2) {
    var e = a(this);
    e.attr("data-target") || t2.preventDefault();
    var i = n(e), o = i.data("bs.collapse") ? "toggle" : e.data();
    l.call(i, o);
  });
}(jQuery), function(a) {
  "use strict";
  var r = '[data-toggle="dropdown"]', o = function(t2) {
    a(t2).on("click.bs.dropdown", this.toggle);
  };
  function l(t2) {
    var e = t2.attr("data-target");
    e || (e = (e = t2.attr("href")) && /#[A-Za-z]/.test(e) && e.replace(/.*(?=#[^\s]*$)/, ""));
    var i = "#" !== e ? a(document).find(e) : null;
    return i && i.length ? i : t2.parent();
  }
  function s(o2) {
    o2 && 3 === o2.which || (a(".dropdown-backdrop").remove(), a(r).each(function() {
      var t2 = a(this), e = l(t2), i = { relatedTarget: this };
      e.hasClass("open") && (o2 && "click" == o2.type && /input|textarea/i.test(o2.target.tagName) && a.contains(e[0], o2.target) || (e.trigger(o2 = a.Event("hide.bs.dropdown", i)), o2.isDefaultPrevented() || (t2.attr("aria-expanded", "false"), e.removeClass("open").trigger(a.Event("hidden.bs.dropdown", i)))));
    }));
  }
  o.VERSION = "3.4.1", o.prototype.toggle = function(t2) {
    var e = a(this);
    if (!e.is(".disabled, :disabled")) {
      var i = l(e), o2 = i.hasClass("open");
      if (s(), !o2) {
        "ontouchstart" in document.documentElement && !i.closest(".navbar-nav").length && a(document.createElement("div")).addClass("dropdown-backdrop").insertAfter(a(this)).on("click", s);
        var n = { relatedTarget: this };
        if (i.trigger(t2 = a.Event("show.bs.dropdown", n)), t2.isDefaultPrevented()) return;
        e.trigger("focus").attr("aria-expanded", "true"), i.toggleClass("open").trigger(a.Event("shown.bs.dropdown", n));
      }
      return false;
    }
  }, o.prototype.keydown = function(t2) {
    if (/(38|40|27|32)/.test(t2.which) && !/input|textarea/i.test(t2.target.tagName)) {
      var e = a(this);
      if (t2.preventDefault(), t2.stopPropagation(), !e.is(".disabled, :disabled")) {
        var i = l(e), o2 = i.hasClass("open");
        if (!o2 && 27 != t2.which || o2 && 27 == t2.which) return 27 == t2.which && i.find(r).trigger("focus"), e.trigger("click");
        var n = i.find(".dropdown-menu li:not(.disabled):visible a");
        if (n.length) {
          var s2 = n.index(t2.target);
          38 == t2.which && 0 < s2 && s2--, 40 == t2.which && s2 < n.length - 1 && s2++, ~s2 || (s2 = 0), n.eq(s2).trigger("focus");
        }
      }
    }
  };
  var t = a.fn.dropdown;
  a.fn.dropdown = function e(i) {
    return this.each(function() {
      var t2 = a(this), e2 = t2.data("bs.dropdown");
      e2 || t2.data("bs.dropdown", e2 = new o(this)), "string" == typeof i && e2[i].call(t2);
    });
  }, a.fn.dropdown.Constructor = o, a.fn.dropdown.noConflict = function() {
    return a.fn.dropdown = t, this;
  }, a(document).on("click.bs.dropdown.data-api", s).on("click.bs.dropdown.data-api", ".dropdown form", function(t2) {
    t2.stopPropagation();
  }).on("click.bs.dropdown.data-api", r, o.prototype.toggle).on("keydown.bs.dropdown.data-api", r, o.prototype.keydown).on("keydown.bs.dropdown.data-api", ".dropdown-menu", o.prototype.keydown);
}(jQuery), function(a) {
  "use strict";
  var s = function(t2, e) {
    this.options = e, this.$body = a(document.body), this.$element = a(t2), this.$dialog = this.$element.find(".modal-dialog"), this.$backdrop = null, this.isShown = null, this.originalBodyPad = null, this.scrollbarWidth = 0, this.ignoreBackdropClick = false, this.fixedContent = ".navbar-fixed-top, .navbar-fixed-bottom", this.options.remote && this.$element.find(".modal-content").load(this.options.remote, a.proxy(function() {
      this.$element.trigger("loaded.bs.modal");
    }, this));
  };
  function r(o, n) {
    return this.each(function() {
      var t2 = a(this), e = t2.data("bs.modal"), i = a.extend({}, s.DEFAULTS, t2.data(), "object" == typeof o && o);
      e || t2.data("bs.modal", e = new s(this, i)), "string" == typeof o ? e[o](n) : i.show && e.show(n);
    });
  }
  s.VERSION = "3.4.1", s.TRANSITION_DURATION = 300, s.BACKDROP_TRANSITION_DURATION = 150, s.DEFAULTS = { backdrop: true, keyboard: true, show: true }, s.prototype.toggle = function(t2) {
    return this.isShown ? this.hide() : this.show(t2);
  }, s.prototype.show = function(i) {
    var o = this, t2 = a.Event("show.bs.modal", { relatedTarget: i });
    this.$element.trigger(t2), this.isShown || t2.isDefaultPrevented() || (this.isShown = true, this.checkScrollbar(), this.setScrollbar(), this.$body.addClass("modal-open"), this.escape(), this.resize(), this.$element.on("click.dismiss.bs.modal", '[data-dismiss="modal"]', a.proxy(this.hide, this)), this.$dialog.on("mousedown.dismiss.bs.modal", function() {
      o.$element.one("mouseup.dismiss.bs.modal", function(t3) {
        a(t3.target).is(o.$element) && (o.ignoreBackdropClick = true);
      });
    }), this.backdrop(function() {
      var t3 = a.support.transition && o.$element.hasClass("fade");
      o.$element.parent().length || o.$element.appendTo(o.$body), o.$element.show().scrollTop(0), o.adjustDialog(), t3 && o.$element[0].offsetWidth, o.$element.addClass("in"), o.enforceFocus();
      var e = a.Event("shown.bs.modal", { relatedTarget: i });
      t3 ? o.$dialog.one("bsTransitionEnd", function() {
        o.$element.trigger("focus").trigger(e);
      }).emulateTransitionEnd(s.TRANSITION_DURATION) : o.$element.trigger("focus").trigger(e);
    }));
  }, s.prototype.hide = function(t2) {
    t2 && t2.preventDefault(), t2 = a.Event("hide.bs.modal"), this.$element.trigger(t2), this.isShown && !t2.isDefaultPrevented() && (this.isShown = false, this.escape(), this.resize(), a(document).off("focusin.bs.modal"), this.$element.removeClass("in").off("click.dismiss.bs.modal").off("mouseup.dismiss.bs.modal"), this.$dialog.off("mousedown.dismiss.bs.modal"), a.support.transition && this.$element.hasClass("fade") ? this.$element.one("bsTransitionEnd", a.proxy(this.hideModal, this)).emulateTransitionEnd(s.TRANSITION_DURATION) : this.hideModal());
  }, s.prototype.enforceFocus = function() {
    a(document).off("focusin.bs.modal").on("focusin.bs.modal", a.proxy(function(t2) {
      document === t2.target || this.$element[0] === t2.target || this.$element.has(t2.target).length || this.$element.trigger("focus");
    }, this));
  }, s.prototype.escape = function() {
    this.isShown && this.options.keyboard ? this.$element.on("keydown.dismiss.bs.modal", a.proxy(function(t2) {
      27 == t2.which && this.hide();
    }, this)) : this.isShown || this.$element.off("keydown.dismiss.bs.modal");
  }, s.prototype.resize = function() {
    this.isShown ? a(window).on("resize.bs.modal", a.proxy(this.handleUpdate, this)) : a(window).off("resize.bs.modal");
  }, s.prototype.hideModal = function() {
    var t2 = this;
    this.$element.hide(), this.backdrop(function() {
      t2.$body.removeClass("modal-open"), t2.resetAdjustments(), t2.resetScrollbar(), t2.$element.trigger("hidden.bs.modal");
    });
  }, s.prototype.removeBackdrop = function() {
    this.$backdrop && this.$backdrop.remove(), this.$backdrop = null;
  }, s.prototype.backdrop = function(t2) {
    var e = this, i = this.$element.hasClass("fade") ? "fade" : "";
    if (this.isShown && this.options.backdrop) {
      var o = a.support.transition && i;
      if (this.$backdrop = a(document.createElement("div")).addClass("modal-backdrop " + i).appendTo(this.$body), this.$element.on("click.dismiss.bs.modal", a.proxy(function(t3) {
        this.ignoreBackdropClick ? this.ignoreBackdropClick = false : t3.target === t3.currentTarget && ("static" == this.options.backdrop ? this.$element[0].focus() : this.hide());
      }, this)), o && this.$backdrop[0].offsetWidth, this.$backdrop.addClass("in"), !t2) return;
      o ? this.$backdrop.one("bsTransitionEnd", t2).emulateTransitionEnd(s.BACKDROP_TRANSITION_DURATION) : t2();
    } else if (!this.isShown && this.$backdrop) {
      this.$backdrop.removeClass("in");
      var n = function() {
        e.removeBackdrop(), t2 && t2();
      };
      a.support.transition && this.$element.hasClass("fade") ? this.$backdrop.one("bsTransitionEnd", n).emulateTransitionEnd(s.BACKDROP_TRANSITION_DURATION) : n();
    } else t2 && t2();
  }, s.prototype.handleUpdate = function() {
    this.adjustDialog();
  }, s.prototype.adjustDialog = function() {
    var t2 = this.$element[0].scrollHeight > document.documentElement.clientHeight;
    this.$element.css({ paddingLeft: !this.bodyIsOverflowing && t2 ? this.scrollbarWidth : "", paddingRight: this.bodyIsOverflowing && !t2 ? this.scrollbarWidth : "" });
  }, s.prototype.resetAdjustments = function() {
    this.$element.css({ paddingLeft: "", paddingRight: "" });
  }, s.prototype.checkScrollbar = function() {
    var t2 = window.innerWidth;
    if (!t2) {
      var e = document.documentElement.getBoundingClientRect();
      t2 = e.right - Math.abs(e.left);
    }
    this.bodyIsOverflowing = document.body.clientWidth < t2, this.scrollbarWidth = this.measureScrollbar();
  }, s.prototype.setScrollbar = function() {
    var t2 = parseInt(this.$body.css("padding-right") || 0, 10);
    this.originalBodyPad = document.body.style.paddingRight || "";
    var n = this.scrollbarWidth;
    this.bodyIsOverflowing && (this.$body.css("padding-right", t2 + n), a(this.fixedContent).each(function(t3, e) {
      var i = e.style.paddingRight, o = a(e).css("padding-right");
      a(e).data("padding-right", i).css("padding-right", parseFloat(o) + n + "px");
    }));
  }, s.prototype.resetScrollbar = function() {
    this.$body.css("padding-right", this.originalBodyPad), a(this.fixedContent).each(function(t2, e) {
      var i = a(e).data("padding-right");
      a(e).removeData("padding-right"), e.style.paddingRight = i || "";
    });
  }, s.prototype.measureScrollbar = function() {
    var t2 = document.createElement("div");
    t2.className = "modal-scrollbar-measure", this.$body.append(t2);
    var e = t2.offsetWidth - t2.clientWidth;
    return this.$body[0].removeChild(t2), e;
  };
  var t = a.fn.modal;
  a.fn.modal = r, a.fn.modal.Constructor = s, a.fn.modal.noConflict = function() {
    return a.fn.modal = t, this;
  }, a(document).on("click.bs.modal.data-api", '[data-toggle="modal"]', function(t2) {
    var e = a(this), i = e.attr("href"), o = e.attr("data-target") || i && i.replace(/.*(?=#[^\s]+$)/, ""), n = a(document).find(o), s2 = n.data("bs.modal") ? "toggle" : a.extend({ remote: !/#/.test(i) && i }, n.data(), e.data());
    e.is("a") && t2.preventDefault(), n.one("show.bs.modal", function(t3) {
      t3.isDefaultPrevented() || n.one("hidden.bs.modal", function() {
        e.is(":visible") && e.trigger("focus");
      });
    }), r.call(n, s2, this);
  });
}(jQuery), function(g) {
  "use strict";
  var o = ["sanitize", "whiteList", "sanitizeFn"], a = ["background", "cite", "href", "itemtype", "longdesc", "poster", "src", "xlink:href"], t = { "*": ["class", "dir", "id", "lang", "role", /^aria-[\w-]*$/i], a: ["target", "href", "title", "rel"], area: [], b: [], br: [], col: [], code: [], div: [], em: [], hr: [], h1: [], h2: [], h3: [], h4: [], h5: [], h6: [], i: [], img: ["src", "alt", "title", "width", "height"], li: [], ol: [], p: [], pre: [], s: [], small: [], span: [], sub: [], sup: [], strong: [], u: [], ul: [] }, r = /^(?:(?:https?|mailto|ftp|tel|file):|[^&:/?#]*(?:[/?#]|$))/gi, l = /^data:(?:image\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\/(?:mpeg|mp4|ogg|webm)|audio\/(?:mp3|oga|ogg|opus));base64,[a-z0-9+/]+=*$/i;
  function u(t2, e2) {
    var i = t2.nodeName.toLowerCase();
    if (-1 !== g.inArray(i, e2)) return -1 === g.inArray(i, a) || Boolean(t2.nodeValue.match(r) || t2.nodeValue.match(l));
    for (var o2 = g(e2).filter(function(t3, e3) {
      return e3 instanceof RegExp;
    }), n2 = 0, s = o2.length; n2 < s; n2++) if (i.match(o2[n2])) return true;
    return false;
  }
  function n(t2, e2, i) {
    if (0 === t2.length) return t2;
    if (i && "function" == typeof i) return i(t2);
    if (!document.implementation || !document.implementation.createHTMLDocument) return t2;
    var o2 = document.implementation.createHTMLDocument("sanitization");
    o2.body.innerHTML = t2;
    for (var n2 = g.map(e2, function(t3, e3) {
      return e3;
    }), s = g(o2.body).find("*"), a2 = 0, r2 = s.length; a2 < r2; a2++) {
      var l2 = s[a2], h = l2.nodeName.toLowerCase();
      if (-1 !== g.inArray(h, n2)) for (var d = g.map(l2.attributes, function(t3) {
        return t3;
      }), p = [].concat(e2["*"] || [], e2[h] || []), c = 0, f = d.length; c < f; c++) u(d[c], p) || l2.removeAttribute(d[c].nodeName);
      else l2.parentNode.removeChild(l2);
    }
    return o2.body.innerHTML;
  }
  var m = function(t2, e2) {
    this.type = null, this.options = null, this.enabled = null, this.timeout = null, this.hoverState = null, this.$element = null, this.inState = null, this.init("tooltip", t2, e2);
  };
  m.VERSION = "3.4.1", m.TRANSITION_DURATION = 150, m.DEFAULTS = { animation: true, placement: "top", selector: false, template: '<div class="tooltip" role="tooltip"><div class="tooltip-arrow"></div><div class="tooltip-inner"></div></div>', trigger: "hover focus", title: "", delay: 0, html: false, container: false, viewport: { selector: "body", padding: 0 }, sanitize: true, sanitizeFn: null, whiteList: t }, m.prototype.init = function(t2, e2, i) {
    if (this.enabled = true, this.type = t2, this.$element = g(e2), this.options = this.getOptions(i), this.$viewport = this.options.viewport && g(document).find(g.isFunction(this.options.viewport) ? this.options.viewport.call(this, this.$element) : this.options.viewport.selector || this.options.viewport), this.inState = { click: false, hover: false, focus: false }, this.$element[0] instanceof document.constructor && !this.options.selector) throw new Error("`selector` option must be specified when initializing " + this.type + " on the window.document object!");
    for (var o2 = this.options.trigger.split(" "), n2 = o2.length; n2--; ) {
      var s = o2[n2];
      if ("click" == s) this.$element.on("click." + this.type, this.options.selector, g.proxy(this.toggle, this));
      else if ("manual" != s) {
        var a2 = "hover" == s ? "mouseenter" : "focusin", r2 = "hover" == s ? "mouseleave" : "focusout";
        this.$element.on(a2 + "." + this.type, this.options.selector, g.proxy(this.enter, this)), this.$element.on(r2 + "." + this.type, this.options.selector, g.proxy(this.leave, this));
      }
    }
    this.options.selector ? this._options = g.extend({}, this.options, { trigger: "manual", selector: "" }) : this.fixTitle();
  }, m.prototype.getDefaults = function() {
    return m.DEFAULTS;
  }, m.prototype.getOptions = function(t2) {
    var e2 = this.$element.data();
    for (var i in e2) e2.hasOwnProperty(i) && -1 !== g.inArray(i, o) && delete e2[i];
    return (t2 = g.extend({}, this.getDefaults(), e2, t2)).delay && "number" == typeof t2.delay && (t2.delay = { show: t2.delay, hide: t2.delay }), t2.sanitize && (t2.template = n(t2.template, t2.whiteList, t2.sanitizeFn)), t2;
  }, m.prototype.getDelegateOptions = function() {
    var i = {}, o2 = this.getDefaults();
    return this._options && g.each(this._options, function(t2, e2) {
      o2[t2] != e2 && (i[t2] = e2);
    }), i;
  }, m.prototype.enter = function(t2) {
    var e2 = t2 instanceof this.constructor ? t2 : g(t2.currentTarget).data("bs." + this.type);
    if (e2 || (e2 = new this.constructor(t2.currentTarget, this.getDelegateOptions()), g(t2.currentTarget).data("bs." + this.type, e2)), t2 instanceof g.Event && (e2.inState["focusin" == t2.type ? "focus" : "hover"] = true), e2.tip().hasClass("in") || "in" == e2.hoverState) e2.hoverState = "in";
    else {
      if (clearTimeout(e2.timeout), e2.hoverState = "in", !e2.options.delay || !e2.options.delay.show) return e2.show();
      e2.timeout = setTimeout(function() {
        "in" == e2.hoverState && e2.show();
      }, e2.options.delay.show);
    }
  }, m.prototype.isInStateTrue = function() {
    for (var t2 in this.inState) if (this.inState[t2]) return true;
    return false;
  }, m.prototype.leave = function(t2) {
    var e2 = t2 instanceof this.constructor ? t2 : g(t2.currentTarget).data("bs." + this.type);
    if (e2 || (e2 = new this.constructor(t2.currentTarget, this.getDelegateOptions()), g(t2.currentTarget).data("bs." + this.type, e2)), t2 instanceof g.Event && (e2.inState["focusout" == t2.type ? "focus" : "hover"] = false), !e2.isInStateTrue()) {
      if (clearTimeout(e2.timeout), e2.hoverState = "out", !e2.options.delay || !e2.options.delay.hide) return e2.hide();
      e2.timeout = setTimeout(function() {
        "out" == e2.hoverState && e2.hide();
      }, e2.options.delay.hide);
    }
  }, m.prototype.show = function() {
    var t2 = g.Event("show.bs." + this.type);
    if (this.hasContent() && this.enabled) {
      this.$element.trigger(t2);
      var e2 = g.contains(this.$element[0].ownerDocument.documentElement, this.$element[0]);
      if (t2.isDefaultPrevented() || !e2) return;
      var i = this, o2 = this.tip(), n2 = this.getUID(this.type);
      this.setContent(), o2.attr("id", n2), this.$element.attr("aria-describedby", n2), this.options.animation && o2.addClass("fade");
      var s = "function" == typeof this.options.placement ? this.options.placement.call(this, o2[0], this.$element[0]) : this.options.placement, a2 = /\s?auto?\s?/i, r2 = a2.test(s);
      r2 && (s = s.replace(a2, "") || "top"), o2.detach().css({ top: 0, left: 0, display: "block" }).addClass(s).data("bs." + this.type, this), this.options.container ? o2.appendTo(g(document).find(this.options.container)) : o2.insertAfter(this.$element), this.$element.trigger("inserted.bs." + this.type);
      var l2 = this.getPosition(), h = o2[0].offsetWidth, d = o2[0].offsetHeight;
      if (r2) {
        var p = s, c = this.getPosition(this.$viewport);
        s = "bottom" == s && l2.bottom + d > c.bottom ? "top" : "top" == s && l2.top - d < c.top ? "bottom" : "right" == s && l2.right + h > c.width ? "left" : "left" == s && l2.left - h < c.left ? "right" : s, o2.removeClass(p).addClass(s);
      }
      var f = this.getCalculatedOffset(s, l2, h, d);
      this.applyPlacement(f, s);
      var u2 = function() {
        var t3 = i.hoverState;
        i.$element.trigger("shown.bs." + i.type), i.hoverState = null, "out" == t3 && i.leave(i);
      };
      g.support.transition && this.$tip.hasClass("fade") ? o2.one("bsTransitionEnd", u2).emulateTransitionEnd(m.TRANSITION_DURATION) : u2();
    }
  }, m.prototype.applyPlacement = function(t2, e2) {
    var i = this.tip(), o2 = i[0].offsetWidth, n2 = i[0].offsetHeight, s = parseInt(i.css("margin-top"), 10), a2 = parseInt(i.css("margin-left"), 10);
    isNaN(s) && (s = 0), isNaN(a2) && (a2 = 0), t2.top += s, t2.left += a2, g.offset.setOffset(i[0], g.extend({ using: function(t3) {
      i.css({ top: Math.round(t3.top), left: Math.round(t3.left) });
    } }, t2), 0), i.addClass("in");
    var r2 = i[0].offsetWidth, l2 = i[0].offsetHeight;
    "top" == e2 && l2 != n2 && (t2.top = t2.top + n2 - l2);
    var h = this.getViewportAdjustedDelta(e2, t2, r2, l2);
    h.left ? t2.left += h.left : t2.top += h.top;
    var d = /top|bottom/.test(e2), p = d ? 2 * h.left - o2 + r2 : 2 * h.top - n2 + l2, c = d ? "offsetWidth" : "offsetHeight";
    i.offset(t2), this.replaceArrow(p, i[0][c], d);
  }, m.prototype.replaceArrow = function(t2, e2, i) {
    this.arrow().css(i ? "left" : "top", 50 * (1 - t2 / e2) + "%").css(i ? "top" : "left", "");
  }, m.prototype.setContent = function() {
    var t2 = this.tip(), e2 = this.getTitle();
    this.options.html ? (this.options.sanitize && (e2 = n(e2, this.options.whiteList, this.options.sanitizeFn)), t2.find(".tooltip-inner").html(e2)) : t2.find(".tooltip-inner").text(e2), t2.removeClass("fade in top bottom left right");
  }, m.prototype.hide = function(t2) {
    var e2 = this, i = g(this.$tip), o2 = g.Event("hide.bs." + this.type);
    function n2() {
      "in" != e2.hoverState && i.detach(), e2.$element && e2.$element.removeAttr("aria-describedby").trigger("hidden.bs." + e2.type), t2 && t2();
    }
    if (this.$element.trigger(o2), !o2.isDefaultPrevented()) return i.removeClass("in"), g.support.transition && i.hasClass("fade") ? i.one("bsTransitionEnd", n2).emulateTransitionEnd(m.TRANSITION_DURATION) : n2(), this.hoverState = null, this;
  }, m.prototype.fixTitle = function() {
    var t2 = this.$element;
    (t2.attr("title") || "string" != typeof t2.attr("data-original-title")) && t2.attr("data-original-title", t2.attr("title") || "").attr("title", "");
  }, m.prototype.hasContent = function() {
    return this.getTitle();
  }, m.prototype.getPosition = function(t2) {
    var e2 = (t2 = t2 || this.$element)[0], i = "BODY" == e2.tagName, o2 = e2.getBoundingClientRect();
    null == o2.width && (o2 = g.extend({}, o2, { width: o2.right - o2.left, height: o2.bottom - o2.top }));
    var n2 = window.SVGElement && e2 instanceof window.SVGElement, s = i ? { top: 0, left: 0 } : n2 ? null : t2.offset(), a2 = { scroll: i ? document.documentElement.scrollTop || document.body.scrollTop : t2.scrollTop() }, r2 = i ? { width: g(window).width(), height: g(window).height() } : null;
    return g.extend({}, o2, a2, r2, s);
  }, m.prototype.getCalculatedOffset = function(t2, e2, i, o2) {
    return "bottom" == t2 ? { top: e2.top + e2.height, left: e2.left + e2.width / 2 - i / 2 } : "top" == t2 ? { top: e2.top - o2, left: e2.left + e2.width / 2 - i / 2 } : "left" == t2 ? { top: e2.top + e2.height / 2 - o2 / 2, left: e2.left - i } : { top: e2.top + e2.height / 2 - o2 / 2, left: e2.left + e2.width };
  }, m.prototype.getViewportAdjustedDelta = function(t2, e2, i, o2) {
    var n2 = { top: 0, left: 0 };
    if (!this.$viewport) return n2;
    var s = this.options.viewport && this.options.viewport.padding || 0, a2 = this.getPosition(this.$viewport);
    if (/right|left/.test(t2)) {
      var r2 = e2.top - s - a2.scroll, l2 = e2.top + s - a2.scroll + o2;
      r2 < a2.top ? n2.top = a2.top - r2 : l2 > a2.top + a2.height && (n2.top = a2.top + a2.height - l2);
    } else {
      var h = e2.left - s, d = e2.left + s + i;
      h < a2.left ? n2.left = a2.left - h : d > a2.right && (n2.left = a2.left + a2.width - d);
    }
    return n2;
  }, m.prototype.getTitle = function() {
    var t2 = this.$element, e2 = this.options;
    return t2.attr("data-original-title") || ("function" == typeof e2.title ? e2.title.call(t2[0]) : e2.title);
  }, m.prototype.getUID = function(t2) {
    for (; t2 += ~~(1e6 * Math.random()), document.getElementById(t2); ) ;
    return t2;
  }, m.prototype.tip = function() {
    if (!this.$tip && (this.$tip = g(this.options.template), 1 != this.$tip.length)) throw new Error(this.type + " `template` option must consist of exactly 1 top-level element!");
    return this.$tip;
  }, m.prototype.arrow = function() {
    return this.$arrow = this.$arrow || this.tip().find(".tooltip-arrow");
  }, m.prototype.enable = function() {
    this.enabled = true;
  }, m.prototype.disable = function() {
    this.enabled = false;
  }, m.prototype.toggleEnabled = function() {
    this.enabled = !this.enabled;
  }, m.prototype.toggle = function(t2) {
    var e2 = this;
    t2 && ((e2 = g(t2.currentTarget).data("bs." + this.type)) || (e2 = new this.constructor(t2.currentTarget, this.getDelegateOptions()), g(t2.currentTarget).data("bs." + this.type, e2))), t2 ? (e2.inState.click = !e2.inState.click, e2.isInStateTrue() ? e2.enter(e2) : e2.leave(e2)) : e2.tip().hasClass("in") ? e2.leave(e2) : e2.enter(e2);
  }, m.prototype.destroy = function() {
    var t2 = this;
    clearTimeout(this.timeout), this.hide(function() {
      t2.$element.off("." + t2.type).removeData("bs." + t2.type), t2.$tip && t2.$tip.detach(), t2.$tip = null, t2.$arrow = null, t2.$viewport = null, t2.$element = null;
    });
  }, m.prototype.sanitizeHtml = function(t2) {
    return n(t2, this.options.whiteList, this.options.sanitizeFn);
  };
  var e = g.fn.tooltip;
  g.fn.tooltip = function i(o2) {
    return this.each(function() {
      var t2 = g(this), e2 = t2.data("bs.tooltip"), i2 = "object" == typeof o2 && o2;
      !e2 && /destroy|hide/.test(o2) || (e2 || t2.data("bs.tooltip", e2 = new m(this, i2)), "string" == typeof o2 && e2[o2]());
    });
  }, g.fn.tooltip.Constructor = m, g.fn.tooltip.noConflict = function() {
    return g.fn.tooltip = e, this;
  };
}(jQuery), function(n) {
  "use strict";
  var s = function(t2, e) {
    this.init("popover", t2, e);
  };
  if (!n.fn.tooltip) throw new Error("Popover requires tooltip.js");
  s.VERSION = "3.4.1", s.DEFAULTS = n.extend({}, n.fn.tooltip.Constructor.DEFAULTS, { placement: "right", trigger: "click", content: "", template: '<div class="popover" role="tooltip"><div class="arrow"></div><h3 class="popover-title"></h3><div class="popover-content"></div></div>' }), ((s.prototype = n.extend({}, n.fn.tooltip.Constructor.prototype)).constructor = s).prototype.getDefaults = function() {
    return s.DEFAULTS;
  }, s.prototype.setContent = function() {
    var t2 = this.tip(), e = this.getTitle(), i = this.getContent();
    if (this.options.html) {
      var o = typeof i;
      this.options.sanitize && (e = this.sanitizeHtml(e), "string" === o && (i = this.sanitizeHtml(i))), t2.find(".popover-title").html(e), t2.find(".popover-content").children().detach().end()["string" === o ? "html" : "append"](i);
    } else t2.find(".popover-title").text(e), t2.find(".popover-content").children().detach().end().text(i);
    t2.removeClass("fade top bottom left right in"), t2.find(".popover-title").html() || t2.find(".popover-title").hide();
  }, s.prototype.hasContent = function() {
    return this.getTitle() || this.getContent();
  }, s.prototype.getContent = function() {
    var t2 = this.$element, e = this.options;
    return t2.attr("data-content") || ("function" == typeof e.content ? e.content.call(t2[0]) : e.content);
  }, s.prototype.arrow = function() {
    return this.$arrow = this.$arrow || this.tip().find(".arrow");
  };
  var t = n.fn.popover;
  n.fn.popover = function e(o) {
    return this.each(function() {
      var t2 = n(this), e2 = t2.data("bs.popover"), i = "object" == typeof o && o;
      !e2 && /destroy|hide/.test(o) || (e2 || t2.data("bs.popover", e2 = new s(this, i)), "string" == typeof o && e2[o]());
    });
  }, n.fn.popover.Constructor = s, n.fn.popover.noConflict = function() {
    return n.fn.popover = t, this;
  };
}(jQuery), function(s) {
  "use strict";
  function n(t2, e2) {
    this.$body = s(document.body), this.$scrollElement = s(t2).is(document.body) ? s(window) : s(t2), this.options = s.extend({}, n.DEFAULTS, e2), this.selector = (this.options.target || "") + " .nav li > a", this.offsets = [], this.targets = [], this.activeTarget = null, this.scrollHeight = 0, this.$scrollElement.on("scroll.bs.scrollspy", s.proxy(this.process, this)), this.refresh(), this.process();
  }
  function e(o) {
    return this.each(function() {
      var t2 = s(this), e2 = t2.data("bs.scrollspy"), i = "object" == typeof o && o;
      e2 || t2.data("bs.scrollspy", e2 = new n(this, i)), "string" == typeof o && e2[o]();
    });
  }
  n.VERSION = "3.4.1", n.DEFAULTS = { offset: 10 }, n.prototype.getScrollHeight = function() {
    return this.$scrollElement[0].scrollHeight || Math.max(this.$body[0].scrollHeight, document.documentElement.scrollHeight);
  }, n.prototype.refresh = function() {
    var t2 = this, o = "offset", n2 = 0;
    this.offsets = [], this.targets = [], this.scrollHeight = this.getScrollHeight(), s.isWindow(this.$scrollElement[0]) || (o = "position", n2 = this.$scrollElement.scrollTop()), this.$body.find(this.selector).map(function() {
      var t3 = s(this), e2 = t3.data("target") || t3.attr("href"), i = /^#./.test(e2) && s(e2);
      return i && i.length && i.is(":visible") && [[i[o]().top + n2, e2]] || null;
    }).sort(function(t3, e2) {
      return t3[0] - e2[0];
    }).each(function() {
      t2.offsets.push(this[0]), t2.targets.push(this[1]);
    });
  }, n.prototype.process = function() {
    var t2, e2 = this.$scrollElement.scrollTop() + this.options.offset, i = this.getScrollHeight(), o = this.options.offset + i - this.$scrollElement.height(), n2 = this.offsets, s2 = this.targets, a = this.activeTarget;
    if (this.scrollHeight != i && this.refresh(), o <= e2) return a != (t2 = s2[s2.length - 1]) && this.activate(t2);
    if (a && e2 < n2[0]) return this.activeTarget = null, this.clear();
    for (t2 = n2.length; t2--; ) a != s2[t2] && e2 >= n2[t2] && (n2[t2 + 1] === void 0 || e2 < n2[t2 + 1]) && this.activate(s2[t2]);
  }, n.prototype.activate = function(t2) {
    this.activeTarget = t2, this.clear();
    var e2 = this.selector + '[data-target="' + t2 + '"],' + this.selector + '[href="' + t2 + '"]', i = s(e2).parents("li").addClass("active");
    i.parent(".dropdown-menu").length && (i = i.closest("li.dropdown").addClass("active")), i.trigger("activate.bs.scrollspy");
  }, n.prototype.clear = function() {
    s(this.selector).parentsUntil(this.options.target, ".active").removeClass("active");
  };
  var t = s.fn.scrollspy;
  s.fn.scrollspy = e, s.fn.scrollspy.Constructor = n, s.fn.scrollspy.noConflict = function() {
    return s.fn.scrollspy = t, this;
  }, s(window).on("load.bs.scrollspy.data-api", function() {
    s('[data-spy="scroll"]').each(function() {
      var t2 = s(this);
      e.call(t2, t2.data());
    });
  });
}(jQuery), function(r) {
  "use strict";
  var a = function(t2) {
    this.element = r(t2);
  };
  function e(i2) {
    return this.each(function() {
      var t2 = r(this), e2 = t2.data("bs.tab");
      e2 || t2.data("bs.tab", e2 = new a(this)), "string" == typeof i2 && e2[i2]();
    });
  }
  a.VERSION = "3.4.1", a.TRANSITION_DURATION = 150, a.prototype.show = function() {
    var t2 = this.element, e2 = t2.closest("ul:not(.dropdown-menu)"), i2 = t2.data("target");
    if (i2 || (i2 = (i2 = t2.attr("href")) && i2.replace(/.*(?=#[^\s]*$)/, "")), !t2.parent("li").hasClass("active")) {
      var o = e2.find(".active:last a"), n = r.Event("hide.bs.tab", { relatedTarget: t2[0] }), s = r.Event("show.bs.tab", { relatedTarget: o[0] });
      if (o.trigger(n), t2.trigger(s), !s.isDefaultPrevented() && !n.isDefaultPrevented()) {
        var a2 = r(document).find(i2);
        this.activate(t2.closest("li"), e2), this.activate(a2, a2.parent(), function() {
          o.trigger({ type: "hidden.bs.tab", relatedTarget: t2[0] }), t2.trigger({ type: "shown.bs.tab", relatedTarget: o[0] });
        });
      }
    }
  }, a.prototype.activate = function(t2, e2, i2) {
    var o = e2.find("> .active"), n = i2 && r.support.transition && (o.length && o.hasClass("fade") || !!e2.find("> .fade").length);
    function s() {
      o.removeClass("active").find("> .dropdown-menu > .active").removeClass("active").end().find('[data-toggle="tab"]').attr("aria-expanded", false), t2.addClass("active").find('[data-toggle="tab"]').attr("aria-expanded", true), n ? (t2[0].offsetWidth, t2.addClass("in")) : t2.removeClass("fade"), t2.parent(".dropdown-menu").length && t2.closest("li.dropdown").addClass("active").end().find('[data-toggle="tab"]').attr("aria-expanded", true), i2 && i2();
    }
    o.length && n ? o.one("bsTransitionEnd", s).emulateTransitionEnd(a.TRANSITION_DURATION) : s(), o.removeClass("in");
  };
  var t = r.fn.tab;
  r.fn.tab = e, r.fn.tab.Constructor = a, r.fn.tab.noConflict = function() {
    return r.fn.tab = t, this;
  };
  var i = function(t2) {
    t2.preventDefault(), e.call(r(this), "show");
  };
  r(document).on("click.bs.tab.data-api", '[data-toggle="tab"]', i).on("click.bs.tab.data-api", '[data-toggle="pill"]', i);
}(jQuery), function(l) {
  "use strict";
  var h = function(t2, e) {
    this.options = l.extend({}, h.DEFAULTS, e);
    var i2 = this.options.target === h.DEFAULTS.target ? l(this.options.target) : l(document).find(this.options.target);
    this.$target = i2.on("scroll.bs.affix.data-api", l.proxy(this.checkPosition, this)).on("click.bs.affix.data-api", l.proxy(this.checkPositionWithEventLoop, this)), this.$element = l(t2), this.affixed = null, this.unpin = null, this.pinnedOffset = null, this.checkPosition();
  };
  function i(o) {
    return this.each(function() {
      var t2 = l(this), e = t2.data("bs.affix"), i2 = "object" == typeof o && o;
      e || t2.data("bs.affix", e = new h(this, i2)), "string" == typeof o && e[o]();
    });
  }
  h.VERSION = "3.4.1", h.RESET = "affix affix-top affix-bottom", h.DEFAULTS = { offset: 0, target: window }, h.prototype.getState = function(t2, e, i2, o) {
    var n = this.$target.scrollTop(), s = this.$element.offset(), a = this.$target.height();
    if (null != i2 && "top" == this.affixed) return n < i2 && "top";
    if ("bottom" == this.affixed) return null != i2 ? !(n + this.unpin <= s.top) && "bottom" : !(n + a <= t2 - o) && "bottom";
    var r = null == this.affixed, l2 = r ? n : s.top;
    return null != i2 && n <= i2 ? "top" : null != o && t2 - o <= l2 + (r ? a : e) && "bottom";
  }, h.prototype.getPinnedOffset = function() {
    if (this.pinnedOffset) return this.pinnedOffset;
    this.$element.removeClass(h.RESET).addClass("affix");
    var t2 = this.$target.scrollTop(), e = this.$element.offset();
    return this.pinnedOffset = e.top - t2;
  }, h.prototype.checkPositionWithEventLoop = function() {
    setTimeout(l.proxy(this.checkPosition, this), 1);
  }, h.prototype.checkPosition = function() {
    if (this.$element.is(":visible")) {
      var t2 = this.$element.height(), e = this.options.offset, i2 = e.top, o = e.bottom, n = Math.max(l(document).height(), l(document.body).height());
      "object" != typeof e && (o = i2 = e), "function" == typeof i2 && (i2 = e.top(this.$element)), "function" == typeof o && (o = e.bottom(this.$element));
      var s = this.getState(n, t2, i2, o);
      if (this.affixed != s) {
        null != this.unpin && this.$element.css("top", "");
        var a = "affix" + (s ? "-" + s : ""), r = l.Event(a + ".bs.affix");
        if (this.$element.trigger(r), r.isDefaultPrevented()) return;
        this.affixed = s, this.unpin = "bottom" == s ? this.getPinnedOffset() : null, this.$element.removeClass(h.RESET).addClass(a).trigger(a.replace("affix", "affixed") + ".bs.affix");
      }
      "bottom" == s && this.$element.offset({ top: n - t2 - o });
    }
  };
  var t = l.fn.affix;
  l.fn.affix = i, l.fn.affix.Constructor = h, l.fn.affix.noConflict = function() {
    return l.fn.affix = t, this;
  }, l(window).on("load", function() {
    l('[data-spy="affix"]').each(function() {
      var t2 = l(this), e = t2.data();
      e.offset = e.offset || {}, null != e.offsetBottom && (e.offset.bottom = e.offsetBottom), null != e.offsetTop && (e.offset.top = e.offsetTop), i.call(t2, e);
    });
  });
}(jQuery);
/*! Bundled license information:

bootstrap/dist/js/bootstrap.min.js:
  (*!
   * Bootstrap v3.4.1 (https://getbootstrap.com/)
   * Copyright 2011-2019 Twitter, Inc.
   * Licensed under the MIT license
   *)
*/
//# sourceMappingURL=bootstrap_dist_js_bootstrap__min__js.js.map
